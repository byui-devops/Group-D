name: Release and Deploy

on:
     push:
       branches:
         - main
     workflow_dispatch:
       inputs:
         aws_access_key_id:
           description: 'AWS Access Key ID'
           required: true
           type: string
         aws_secret_access_key:
           description: 'AWS Secret Access Key'
           required: true
           type: string
         aws_session_token:
           description: 'AWS Session Token'
           required: false
           type: string

jobs:
     deploy:
       runs-on: ubuntu-latest
       steps:
         - uses: actions/checkout@v3
         - name: Set up Node.js
           uses: actions/setup-node@v3
           with:
             node-version: '16'
         - name: Install Terraform
           uses: hashicorp/setup-terraform@v2
           with:
             terraform_version: 1.5.0
         - name: Configure AWS Credentials
           uses: aws-actions/configure-aws-credentials@v4
           with:
             aws-access-key-id: ${{ github.event.inputs.aws_access_key_id || secrets.AWS_ACCESS_KEY_ID }}
             aws-secret-access-key: ${{ github.event.inputs.aws_secret_access_key || secrets.AWS_SECRET_ACCESS_KEY }}
             aws-session-token: ${{ github.event.inputs.aws_session_token || secrets.AWS_SESSION_TOKEN }}
             aws-region: us-east-1
         - name: Terraform Init
           working-directory: ./terraform
           run: terraform init
         - name: Terraform Apply
           working-directory: ./terraform
           run: terraform apply -auto-approve
         - name: Log in to Docker Hub
           uses: docker/login-action@v2
           with:
             username: ${{ secrets.DOCKERHUB_USERNAME }}
             password: ${{ secrets.DOCKERHUB_PASSWORD }}
         - name: Deploy to EC2
           env:
             EC2_PUBLIC_IP: "52.35.13.102"
           run: |
             docker pull anhmeo/group-d:latest
             ssh -o StrictHostKeyChecking=no -i SHA256:yIIhcupZWY8XD4isRZpkj1r7Wyp2pLQ0uhaOEIqf59k ec2-user@52.35.13.102 << 'EOF'
               docker stop task-api || true
               docker rm task-api || true
               docker run -d --name task-api -p 80:3000 anhmeo/group-d:latest
             EOF
