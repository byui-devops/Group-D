name: Release and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      aws_access_key_id:
        description: 'AWS Access Key ID'
        required: true
        type: string
      aws_secret_access_key:
        description: 'AWS Secret Access Key'
        required: true
        type: string
      aws_session_token:
        description: 'AWS Session Token'
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ github.event.inputs.aws_access_key_id || secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ github.event.inputs.aws_secret_access_key || secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ github.event.inputs.aws_session_token || secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init
      - name: Terraform Apply
        id: apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
      - name: Debug Terraform Output
        run: echo "Instance IP: $(terraform -chdir=./terraform output -raw instance_public_ip 2>/dev/null)"
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Docker Image
        run: docker build -t anhmeo/group-d:latest .
      - name: Push Docker Image
        run: docker push anhmeo/group-d:latest
      - name: Deploy to EC2
        run: |
          # Extract the IP and filter out debug output
          INSTANCE_IP=$(terraform -chdir=./terraform output -raw instance_public_ip 2>/dev/null | grep -oE '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$INSTANCE_IP" ]; then
            echo "Error: Failed to extract instance_public_ip"
            exit 1
          fi
          echo "Deploying to IP: $INSTANCE_IP"
          # Write SSH key
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem
          # Pull Docker image
          docker pull anhmeo/group-d:latest
          # Wait for instance to be reachable (using SSH timeout)
          for i in {1..30}; do
            if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i key.pem ec2-user@$INSTANCE_IP exit 0 2>/dev/null; then
              echo "SSH port open"
              break
            fi
            echo "Waiting for instance $INSTANCE_IP... ($i/30)"
            sleep 10
          done
          # Deploy via SSH
          ssh -o StrictHostKeyChecking=no -i key.pem ec2-user@$INSTANCE_IP << 'EOF'
            # Install Docker if not present
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo yum update -y
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -aG docker ec2-user
              # Wait for Docker to be ready
              sleep 10
            else
              echo "Docker is already installed"
            fi
            docker stop task-api || true
            docker rm task-api || true
            docker run -d --name task-api -p 80:3000 anhmeo/group-d:latest
          EOF
        working-directory: ${{ github.workspace }}
